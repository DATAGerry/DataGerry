# DataGerry - OpenSource Enterprise CMDB
# Copyright (C) 2025 becon GmbH
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

# -------------------------------------------------------------------------------------------------------------------- #
#                                                   GET - RUN REPORT                                                   #
# -------------------------------------------------------------------------------------------------------------------- #

get:
  tags:
      - Reports
      - Cloud
      - OnPremise
  summary: Runs the report with the given public_id [Cloud] [OnPremise]
  description: |
      Returns the result of the **Report** with the given **public_id**
  parameters:
      - name: public_id
        in: path
        description: The **public_id** of the **Report** which should be executed
        required: true
        schema:
            type: integer
  operationId: run_cmdb_report_query
  responses:
      "200":
          description: Returns the result of the **Report** with the given **public_id**
          content:
              application/json:
                  schema:
                      type: object
                      properties:
                          result:
                              $ref: "../../components/schemas/CmdbReport.yaml"
      "400":
          description: Failed to retrieve the requested **Report**
          content:
              application/json:
                  schema:
                      type: object
                      properties:
                          error:
                              type: string
                              example: "Failed to retrieve the requested Report from the database"
      "404":
          description: The **Report** was not found
          content:
              application/json:
                  schema:
                      type: object
                      properties:
                          error:
                              type: string
                              example: "The Report was not found"
      "500":
          description: An unexpected error occured
          content:
              application/json:
                  schema:
                      type: object
                      properties:
                          error:
                              type: string
                              example: "Internal server error"