# DATAGERRY - OpenSource Enterprise CMDB
# Copyright (C) 2025 becon GmbH
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

# -------------------------------------------------------------------------------------------------------------------- #
#                                                     INSERT OBJECT                                                    #
# -------------------------------------------------------------------------------------------------------------------- #

post:
    tags: 
        -  CmdbObjects
    summary: Insert a new CmdbObject
    description: |
        Required User Right: **base.framework.object.add**
        <br><hr><br>
        Inserts a new CmdbObject into the database.
        <br><br>
        The **public_id**, **author_id** and **creation_time** properties will be automatically created and don't need to be provided.
    operationId: insert_object
    requestBody:
        required: true
        content:
            application/json:
                schema:
                    $ref: '../../components/schemas/CmdbObject.yaml'
    responses:
        "200":
            description: New CmdbObject was created and the **public_id** of it is returned.
            content:
                application/json:
                    schema:
                        type: integer
                        example: 21
        "400":
            description: |
                Multiple cases are possible:
                <br>
                - Maximum number of config items reached
                - Object with given **public_id** already exists
            content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error:
                        type: string
                        example: "Maximum number of config items reached"
        "403":
            $ref: '../../components/responses.yaml#/Forbidden'
        "500":
            description: |
                Multiple cases are possible:
                <br>
                - Type of object could not be retrieved
                - Object could not be inserted in database
                - The created object could not be retrieved from database
                - Object could not be rendered
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: string
                                example: "Object could not be inserted in database"

# -------------------------------------------------------------------------------------------------------------------- #
#                                                      GET OBJECTS                                                     #
# -------------------------------------------------------------------------------------------------------------------- #

get:
    tags: 
        -  CmdbObjects
    summary: Retrieve multiple CmdbObjects
    description: |
        Required User Right: **base.framework.object.view**
        <br><hr><br>
        Returns all CmdbObjects if no **CollectionParameters** are passed
    parameters: 
        - name: CollectionParameters
          in: query
          description: Parameters for filtering, limiting, sorting, and pagination of CmdbObjects
          required: false
          schema:
            $ref: '../../components/schemas/CollectionParameters.yaml'
    operationId: get_objects
    responses:
        "200":
            description: Returns a **list of CmdbObjects** matching the filter criteria
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            results:
                                type: array
                                items:
                                    $ref: '../../components/schemas/CmdbObject.yaml'
                            total:
                                type: integer
                                description: the total amount of results
        "400":
            description: Could not iterate the objects
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: string
                                example: "Could not iterate the objects"
        "404":
            description: |
                Multiple cases are possible:
                <br>
                - No objects found
                - Could not retrive objects
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: string
                                example: "Could not retrive objects"